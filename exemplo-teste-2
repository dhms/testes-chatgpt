import { UserService } from './user.service';
import { User } from '../shared/models/user';
import { of } from 'rxjs';

describe('UserService', () => {
  let userService: UserService;
  let nativeCommunicationService: NativeCommunicationService;

  beforeEach(() => {
    nativeCommunicationService = {
      getMemoryItem: jest.fn().mockReturnValue(of()),
    } as any;
    userService = new UserService(nativeCommunicationService);
  });

  it('should get user from memory', () => {
    const user = new User();
    user.dac = '1234';
    jest.spyOn(nativeCommunicationService, 'getMemoryItem').mockReturnValueOnce(of(user.dac));

    userService.getUser();
    expect(nativeCommunicationService.getMemoryItem).toHaveBeenCalledTimes(1);
    expect(userService.user).toEqual(user);
  });
});
