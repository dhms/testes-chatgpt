import { TestBed, getTestBed } from '@angular/core/testing';
import { UserService } from './user.service';
import { NativeCommunicationService } from '@quickweb/native-communication';
import { of } from 'rxjs';
import { User } from '../shared/models/user';

describe('UserService', () => {
  let injector: TestBed;
  let service: UserService;
  let nativeCommunicationServiceSpy: jasmine.SpyObj<NativeCommunicationService>;
  let user: User;

  beforeEach(() => {
    const spy = jasmine.createSpyObj('NativeCommunicationService', ['getMemoryItem']);
    TestBed.configureTestingModule({
      providers: [UserService, { provide: NativeCommunicationService, useValue: spy }]
    });

    injector = getTestBed();
    service = injector.get(UserService);
    nativeCommunicationServiceSpy = TestBed.inject(NativeCommunicationService) as jasmine.SpyObj<NativeCommunicationService>;
    user = new User();
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });

  it('should get user memory successfully', () => {
    spyOn(nativeCommunicationServiceSpy, 'getMemoryItem').and.returnValue(of('value'));
    service.getUserMemory();
    expect(nativeCommunicationServiceSpy.getMemoryItem).toHaveBeenCalled();
    expect(service.user).toEqual(user);
  });

  it('should get user successfully', () => {
    spyOn(service, 'getUserMemory');
    spyOn(nativeCommunicationServiceSpy, 'getMemoryItem').and.returnValue(of('value'));
    service.getUser();
    expect(service.getUserMemory).toHaveBeenCalled();
    expect(nativeCommunicationServiceSpy.getMemoryItem).toHaveBeenCalled();
    expect(service.user).toEqual(user);
  });
});
